Index: create_rpm_image
===================================================================
--- create_rpm_image    (revision 12842)
+++ create_rpm_image    (working copy)
@@ -11,8 +11,8 @@
 . /etc/sysconfig/kona
 
 declare -r prog=${0##*/}
-declare -r long_opts="image:,instdir:,nodelete,rpmlist:,rpmdir:,stdin,update,help,qemu:"
-declare -r short_opts="i:d:nr:suz:hq:"
+declare -r long_opts="image:,instdir:,nodelete,rpmlist:,rpmdir:,stdin,update,nbd:,help,qemu:"
+declare -r short_opts="i:d:nr:sub:z:hq:"
 declare -r getopt="/usr/bin/getopt -u"
 declare -r usage="\
 \n\
@@ -54,6 +54,9 @@
                                   'M' (megabyte, 1024k),\n\
                                   'G' (gigabyte, 1024M)\n\
 \n\
+   -b, --nbd size              Create nbd image of this size\n\
+                                 'size' is the disk image size in MBytes.\n\
+\n\
    -h, --help                   Display usage message\n"
 
 die () {
@@ -77,6 +80,7 @@
         -n|--nodelete)     remove_image=0   ; shift   ;;
         -r|--rpmlist)      rpmlist=$2       ; shift 2 ;;
         -q|--qemu)         qemu_size="$2"   ; shift 2 ;;
+       -b|--nbd)          nbd_size="$2"    ; shift 2 ;;
         -s|--stdin)        stdin=1          ; shift   ;;
         -u|--update)       remove_image=0 ; update=1  ; shift   ;;
         -z|--instdir)      inst_dir=$2       ; shift 2 ;;
@@ -156,3 +160,6 @@
 if [ -n "${qemu_size}" ] ; then
   echo "qemu image is located at ${imagedir}.img"
 fi
+if [ -n "${nbd_size}" ] ; then
+  echo "nbd image is located at ${imagedir}.img"
+fi
Index: create_yum_image
===================================================================
--- create_yum_image    (revision 12842)
+++ create_yum_image    (working copy)
@@ -11,8 +11,8 @@
 . /etc/sysconfig/kona
 
 declare -r prog=${0##*/}
-declare -r long_opts="cache:image:,instdir:,install_rpm,list:,version:,releasever:,update,nodelete,yum_include:,repodir:,help,qemu:"
-declare -r short_opts="ci:d:rl:nv:uy:z:hq:"
+declare -r long_opts="cache:image:,instdir:,install_rpm,list:,version:,releasever:,update,nodelete,yum_include:,repodir:,help,qemu:,nbd:"
+declare -r short_opts="ci:d:rl:nv:uy:z:hq:b:"
 declare -r getopt="/usr/bin/getopt -u"
 declare -r usage="\
 \n\
@@ -80,6 +80,9 @@
                                   'M' (megabyte, 1024k),\n\
                                   'G' (gigabyte, 1024M)\n\
 \n\
+   -b, --nbd size              Create nbd image of this size\n\
+                               'size' is the disk image size in Mbytes.\n\
+\n\
    -h, --help                   Display usage message\n"
 
 
@@ -116,6 +119,7 @@
         -n|--nodelete)     remove_image=0   ; shift   ;;
         -u|--update)       remove_image=0 ; update=1   ; shift   ;;
         -q|--qemu)         qemu_size="$2"   ; shift 2 ;;
+        -b|--nbd)          nbd_size="$2"    ; shift 2 ;;
         -l|--list)         list=$2          ; shift 2 ;;
         -v|--version)      version=$2       ; shift 2 ;;
            --releasever)   releasever=$2    ; shift 2 ;;
@@ -256,3 +260,6 @@
 if [ -n "${qemu_size}" ] ; then
   echo "qemu image is located at ${imagedir}.img"
 fi
+if [ -n "${nbd_size}" ]; then
+  echo "nbd image is located at ${imagedir}.img"
+fi
Index: kona.sysconfig
===================================================================
--- kona.sysconfig      (revision 12842)
+++ kona.sysconfig      (working copy)
@@ -33,6 +33,9 @@
 # qemu image size, if defined, qemu image
 # will be created as ${image}.img and mounted on ${image}
 qemu_size=""
+# nbd image size, if defined, nbd image
+# will be created as ${image}.img and mounted on ${image}
+nbd_size=""
 
 # Usage: check_root
 # If user is not root, exit with NOTRUN.
@@ -170,6 +173,37 @@
 
 }
 
+# Usage: make_nbd_img
+# Create nbd ${image}.img and mount it on ${image}
+make_nbd_img()
+{
+  if [ -n "${nbd_size}" ] ; then
+
+    # remove old nbd image?
+    if [ "${remove_image}" -eq 1 ] ; then
+        rm -f "${inst_dir}/${image}.img"
+    fi
+
+    # if image don't exist create it
+    if [ ! -e "${inst_dir}/${image}.img" ] ; then
+      echo "creating ${inst_dir}/${image}.img of size ${nbd_size}MB"
+      dd if=/dev/zero of=${inst_dir}/${image}.img bs=1M count=${nbd_size}
+      chmod 644 ${inst_dir}/${image}.img
+    fi
+
+    # format image 
+    echo "creating ext4 filesystem on ${inst_dir}/${image}.img"
+    mkfs.ext4 -F -L/ ${inst_dir}/${image}.img
+    tune2fs -i 0 -c 0 -O ^has_journal,sparse_super ${inst_dir}/${image}.img
+    fsck.ext4 -y ${inst_dir}/${image}.img
+
+    # get image mounted
+    mkdir -p ${inst_dir}/${image}
+    mount -o loop ${inst_dir}/${image}.img ${inst_dir}/${image} || return $EXIT_FAIL
+  fi
+}
+
+
 # Usage: make_image_dir
 # Create directories that are required to build image
 make_image_dir()
@@ -233,6 +267,7 @@
   umount_proc
   remove_image_dir
   make_qemu_img || return $EXIT_FAIL
+  make_nbd_img || return $EXIT_FAIL
   make_image_dir
   mount_proc
   check_nodev
@@ -295,6 +330,19 @@
  
   fi
 
+  # make nbd image ready to boot via pxelinux then remount image read-only
+  # This will most likely go away when toss3 gets configpxe tools.  This also
+  # assumes there's only a single kernel installed on the image.
+  if [ -n "${nbd_size}" ] ; then
+    # make generic links to kernel and initramfs
+    pushd ${inst_dir}/${image}/boot > /dev/null 2>&1
+      ln -s `ls |grep -v rescue |grep -m1 vmlinuz` vmlinuz
+      ln -s `ls |grep -v rescue |grep -m1 initramfs` initramfs
+    popd > /dev/null 2>&1
+
+    mount -o remount,ro ${inst_dir}/${image}
+  fi
+
   # remount directory with nodev option if required
   mount_nodev
 }
